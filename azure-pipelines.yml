# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version: '4.0.14.0'
  versionShort: '4.0.14'

steps:
- task: DotNetCoreCLI@2
  displayName: 'dotnet info'
  inputs:
    command: custom
    custom: '--info'

- task: NuGetToolInstaller@0
  displayName: 'Use NuGet 4.4.1'
  inputs:
    versionSpec: 4.4.1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '$(Parameters.TestProjects)'
    arguments: '--configuration $(BuildConfiguration) --no-build /p:AltCover=true /p:AltCoverForce=true /p:AltCoverCallContext=[Fact] /p:AltCoverXmlReport=..\target\reports\coverage\coverage.opencover.xml'

- task: Palmmedia.reportgenerator.reportgenerator-build-release-task.reportgenerator@1
  displayName: ReportGenerator
  inputs:
    reports: 'src\target\reports\coverage\coverage.opencover.xml'
    targetdir: 'src\target\reports\coverage'
    reporttypes: 'HtmlInline_AzurePipelines;Cobertura'
    assemblyfilters: '-xunit*'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage results'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(build.sourcesdirectory)\src\target\reports\coverage\Cobertura.xml'
    reportDirectory: '$(build.sourcesdirectory)\src\target\reports\coverage'

- task: CopyFiles@2
  displayName: 'Prepare ZIP release: Basicfiles'
  inputs:
    SourceFolder: src/target/bin/Release
    Contents: |
     LICENSE.txt
     Readme.txt
    TargetFolder: tmpzip

- task: CopyFiles@2
  displayName: 'Prepare ZIP release: Net47'
  inputs:
    SourceFolder: src/target/bin/Release
    Contents: |
     target/bin/Release/appsettings.json
     target/bin/Release/Microsoft.Build.*.dll
     target/bin/Release/Microsoft.Extensions*.dll
     target/bin/Release/Microsoft.Win32.Primitives.dll
     target/bin/Release/Newtonsoft.Json.dll
     target/bin/Release/netstandard.dll
     target/bin/Release/ReportGenerator.Core.dll
     target/bin/Release/ReportGenerator.exe
     target/bin/Release/ReportGenerator.exe.config
     target/bin/Release/SixLabors.*.dll
     target/bin/Release/System.*.dll
    TargetFolder: tmpzip/net47

- task: CopyFiles@2
  displayName: 'Prepare ZIP release: NetCore'
  inputs:
    SourceFolder: src/target/bin/Release/netcoreapp2.0/publish
    Contents: '**\*.*'
    TargetFolder: tmpzip/netcoreapp2.0

- task: ArchiveFiles@2
  displayName: 'Pack ZIP release'
  inputs:
    rootFolderOrFile: tmpzip
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/ReportGenerator_$(Version).zip'

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: pack
    packagesToPack: 'src/Deployment/nuget/*.nuspec'
    toolPackage: true